@model PrishuSoftTask.Models.Employee

@{
    ViewBag.Title = "AddEmployee";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var designationList = ViewBag.Designations as List<SelectListItem> ?? new List<SelectListItem>();
    var gradeList = ViewBag.GradeList as List<SelectListItem> ?? new List<SelectListItem>();
}

<h2>AddEmployee</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DesignationId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DesignationId, ViewBag.Designations as IEnumerable<SelectListItem> ?? new List<SelectListItem>(), "-- Select Designation --", new { @class = "form-control", id = "ddlDesignation" })
                @Html.ValidationMessageFor(model => model.DesignationId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.GradeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GradeId,
                    ViewBag.GradeList as IEnumerable<SelectListItem> ?? new List<SelectListItem>(),
                    "-- Select Grade --",
                    new { @class = "form-control", id = "ddlGrade" })
                @Html.ValidationMessageFor(model => model.GradeId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#ddlDesignation').change(function () {
                var designationId = $(this).val();

                if (designationId) {
                    $('#ddlGrade').empty().append('<option>Loading...</option>');

                    $.get('@Url.Action("GetGrades", "Employee")', { designationId: designationId }, function (data) {
                        $('#ddlGrade').empty().append('<option value="">-- Select Grade --</option>');
                        $.each(data, function (index, item) {
                            $('#ddlGrade').append($('<option>', {
                                value: item.Value,
                                text: item.Text
                            }));
                        });
                    });
                } else {
                    $('#ddlGrade').empty().append('<option value="">-- Select Grade --</option>');
                }
            });
        });
    </script>
}
